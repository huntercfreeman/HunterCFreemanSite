@page "/"
@using Models
@using Interfaces
@using DM2BD.Typeahead
@inject IProgrammingProjectRepository ProgrammingProjectRepository
<h1>Filter using the searchbar directly below this:</h1>
<Typeahead ItemType="ProgrammingProject" Filter="(async (x) => ProgrammingProjectRepository.GetProgrammingProjectsByTitle(x))"
           OnAutocomplete="((x) => { ProgrammingProjects = x; StateHasChanged(); })" Selector="((ProgrammingProject x) => x.Title)" Placeholder="Filter Results">
    <AutocompleteDropdownItemTemplate Context="searchContext">
        <div>@searchContext.Title</div>
    </AutocompleteDropdownItemTemplate>
    <SubmitButtonTemplate>
    </SubmitButtonTemplate>
</Typeahead>
@*
<Typeahead ItemType="Game" DisplayAutocompleteDropdown="true" Selector="((Game x) => x.Title)" Text="Search:" Placeholder=""
                           Filter="(async (x) => GameService.GetGamesByTitle(x))" OnAutocomplete="((x) => { Games = x; StateHasChanged(); })" ResultsAreSame="true">
                    <AutocompleteDropdownItemTemplate Context="searchContext">
                        <div>@searchContext.Title</div>
                    </AutocompleteDropdownItemTemplate>
                    <SubmitButtonTemplate>
                        <span class="input-group-addon primary" style="height: 100%; width: auto; border-top-right-radius: 4px; border-bottom-right-radius: 4px;">
                            <i class="fa fa-search"></i>
                        </span>
                    </SubmitButtonTemplate>
                </Typeahead>    
*@
<div class="container">
    <div class="row">
        @foreach (ProgrammingProject programmingProject in ProgrammingProjects)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 col-6">
                <a title="@programmingProject.Description" href="@programmingProject.HrefURL" target="_blank">
                    <img style="max-width:100%; max-height:100%;" src="@programmingProject.ImageURL" />
                    @programmingProject.Title
                </a>
            </div>
        }
    </div>
</div>

@code
{ 
    public List<ProgrammingProject> ProgrammingProjects { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        ProgrammingProjects = ProgrammingProjectRepository.GetProgrammingProjects();
    }
}