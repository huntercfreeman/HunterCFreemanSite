@using Models
@using Interfaces
@using DM2BD.Typeahead


<div class="sidebar" style="background-image: none; background-color: lightgray; width: @(Width)px; height: @(Height);">
    <div class="top-row pl-4 navbar navbar-dark">
        @if (!IsCollapsed)
        {
            <a class="navbar-brand" href="">Filters</a>
            <div @onclick="(() => { Width = 100; IsCollapsed = true; })" class="btn btn-primary">
                <span class="oi oi-collapse-left" aria-hidden="true"></span>
            </div>
        }
        else
        {
            <div @onclick="(() => { Width = 250; IsCollapsed = false ; })" class="btn btn-primary">
                <span class="oi oi-expand-right" aria-hidden="true"></span>
            </div>
        }
        <button class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>

    @if (!IsCollapsed)
    {
        <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
            <ul class="nav flex-column">
                <li class="nav-item px-3">
                    <h3 style="text-decoration: underline;">Search</h3>
                    <Typeahead ItemType="ProgrammingProject" Filter="(async (x) => ProgrammingProjectRepository.FilterByTitle(x))"
                               OnAutocomplete="((x) => { ProgrammingProjects = x; InvokeAsync(StateHasChanged); })" Selector="((ProgrammingProject x) => x.Title)" Placeholder="Filter Results">
                        <AutocompleteDropdownItemTemplate Context="searchContext">
                            <div>@searchContext.Title</div>
                        </AutocompleteDropdownItemTemplate>
                        <SubmitButtonTemplate>
                        </SubmitButtonTemplate>
                    </Typeahead>
                </li>
                <li class="nav-item px-3">
                    <h3 style="text-decoration: underline;">Languages</h3>
                    <FilterMenuItem DisplayText="C" Filter="(() => ProgrammingProjectRepository.FilterByCProgrammingLanguage())" IsChecked="(() => ProgrammingProjectRepository.FilterByCProgrammingLanguageBool ? true : false)"/>
                    <FilterMenuItem DisplayText="C#" Filter="(() => ProgrammingProjectRepository.FilterByCSharpProgrammingLanguage())" IsChecked="(() => ProgrammingProjectRepository.FilterByCSharpProgrammingLanguageBool ? true : false)"/>
                </li>
                <li class="nav-item px-3">
                    <h3 style="text-decoration: underline;">Data Structures</h3>
                    <FilterMenuItem DisplayText="Arrays" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Lists" Filter="(() => ProgrammingProjectRepository.FilterByLists())" IsChecked="(() => ProgrammingProjectRepository.FilterByListsBool ? true : false)" />
                    <FilterMenuItem DisplayText="Trees" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Hash Based" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Graphs" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Other" Filter="NotImplemented" IsChecked="(() => false)" />
                </li>
                <li class="nav-item px-3">
                    <h3 style="text-decoration: underline;">Math</h3>
                    <FilterMenuItem DisplayText="Differential Calculus" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Integral Calculus" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Multivariable Calculus" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Differential Equations" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Linear Algebra" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Discrete Math" Filter="NotImplemented" IsChecked="(() => false)" />
                </li>
                <li class="nav-item px-3">
                    <h3 style="text-decoration: underline;">Software Development</h3>
                    <FilterMenuItem DisplayText="Online Shop" Filter="NotImplemented" IsChecked="(() => false)" />
                    <FilterMenuItem DisplayText="Blog" Filter="NotImplemented" IsChecked="(() => false)" />
                </li>
            </ul>
        </div>
    }
</div>
@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
